<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.guke.dao.DrugsMapper">
  <resultMap id="BaseResultMap" type="com.example.guke.entity.Drugs">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type" jdbcType="INTEGER" property="type" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, type
  </sql>
  <select id="findAll" resultType="com.example.guke.entity.Drugs" parameterType="com.example.guke.entity.Drugs">
    select  * from drugs
    where 1=1
    <if test="name !='' and name != null">
      and name like concat('%',#{name},'%')
    </if>
    <if test="type != null">
     and type like concat('%',#{type},'%')
    </if>
  </select>
  <select id="findByName" resultType="com.example.guke.entity.Drugs" parameterType="String">
    select  * from drugs where name=#{name}
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select *
    from drugs
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from drugs
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.guke.entity.Drugs">
    insert into drugs (name, type,price,number
      )
    values ( #{name,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER},#{price},#{number}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.guke.entity.Drugs">
    insert into drugs
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.guke.entity.Drugs">
    update drugs
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.guke.entity.Drugs">
    update drugs
    set name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},number=#{number},price=#{price},text=#{text}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateNumber" parameterType="com.example.guke.entity.Drugs">
    update drugs set number=number-#{number} where id=#{id}
  </update>
  <select id="getDrugsByName" resultType="com.example.guke.entity.Drugs" parameterType="String">
    select * from drugs where name like concat('%',#{name},'%')
  </select>
</mapper>